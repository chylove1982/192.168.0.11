<#@ template language="C#" #>
using System;
using System.Linq;
using System.Threading.Tasks;
using Temii.Extentions;
using Temii.ModelCore;
using Temii.ModelCore.EntityBase;
using <#= _prefix #>.Module.<#= _model.Project.Code #>.Application.<#= _class.Name #>Service.ViewModels;
using <#= _prefix #>.Module.<#= _model.Project.Code #>.Domain.<#= _class.Name #>;
using <#= _prefix #>.Module.<#= _model.Project.Code #>.Domain.<#= _class.Name #>.Models;

namespace <#= _prefix #>.Module.<#= _model.Project.Code #>.Application.<#= _class.Name #>Service
{
    /// <summary>
    /// <#= _class.Remarks #>服务
    /// </summary>

    public class <#= _class.Name #>Service : BaseBLL<<#= _class.Name #>Entity>, I<#= _class.Name #>Service
    {
      

<# if(_class.Method.Query) {#>
		/// <summary>
        /// 查询
        /// </summary>
        /// <param name="model"></param>
        /// <returns>返回数据列表 List_<#= _class.Name #>Entity </returns>
        public async Task<IResultModel> Query(<#= _class.Name #>QueryModel model)
        {
            var PageSize = model.Paging.Size<=0?30:model.Paging.Size;
            var PageIndex = model.Paging.Index <= 1 ? 1 : model.Paging.Index;
             var result = new QueryResultModel<<#= _class.Name #>Entity>
            {
                Rows = GetPageByContains(PageIndex, PageSize, out int Total, p=>p.ID!="条件"),
                PageCount = (Total + PageSize - 1) / PageSize,
                TotalCount = Total
            };
            return ResultModel.Success(result);
        }

<#} #>
<# if(_class.Method.Add) {#>
        /// <summary>
        /// 新增服务
        /// </summary>
        /// <param name="model"></param>
        /// <returns>返回成功失败</returns>
        public async Task<IResultModel> Add(<#= _class.Name #>AddModel model)
        {
		    // Model 转换成实体
		    var entity=model.CopyTo<<#= _class.Name #>Entity>();
			// 实体业务处理Begin

			// 实体业务处理End

			// 对实体操作数据库返回操作结果BOOL
            var result = Add(entity);

			 // 统一操作返回
            return ResultModel.Result(result);
        }

<#} #>
<# if(_class.Method.Delete) {#>
		/// <summary>
        /// 删除服务
        /// </summary>
        /// <param name="id">编号</param>
        /// <returns>返回成功失败</returns>
        public async Task<IResultModel> Delete(string ID)
        {
		    // 通过ID获得实体
		    var entity = GetModeleByKey(ID);
			// 判断实体是否存在
            if (entity == null)
                return ResultModel.NotExists;

		    // 删除数据实体
            var result = RemoveByKey(ID);
		    // 统一操作返回
            return ResultModel.Result(result);
        }

<#} #>
<# if(_class.Method.Edit) {#>
		/// <summary>
        /// 编辑_查看单条详情
        /// </summary>
        /// <param name="id"></param>
        /// <returns>返回实体 <#= _class.Name #>Entity </returns>
        public async Task<IResultModel> Edit(string ID)
        {
	    	// 通过ID获得实体
            var entity = GetModeleByKey(ID);
			// 判断实体是否存在
            if (entity == null)
                return ResultModel.NotExists;
            // 统一操作返回
            return ResultModel.Success(entity);
        }
		/// <summary>
        /// 修改服务
        /// </summary>
        /// <param name="model"></param>
        /// <returns>返回成功失败</returns>
        public async Task<IResultModel> Update(<#= _class.Name #>UpdateModel model)
        {
			// 通过ID获得实体
            var entity = GetModeleByKey(model.ID);
			// 判断实体是否存在
            if (entity == null)
                return ResultModel.NotExists;
            // Model 内容复制到实体
            model.CopyTo(entity);
		    // 操作数据库
			var result=Update(entity);
			// 统一操作返回
            return ResultModel.Success(result);

        }
<#} #>
    }
}
