<#@ template language="C#" #>
<#@ import namespace="Nm.Lib.Utils.Core.Extensions" #>
<#@ import namespace="Nm.Module.CodeGenerator.Domain.Property" #>
using System;
using <#= _prefix #>.Lib.Data.Abstractions.Attributes;
<# if(_baseEntityName=="_baseEntityName"||_baseEntityName.StartsWith("Entity<")){ #>
using <#= _prefix #>.Lib.Data.Core.Entities;
<#}else{ #>
using <#= _prefix #>.Lib.Data.Core.Entities.Extend;
<#} #>
using System.ComponentModel.DataAnnotations.Schema;
using Temii.Core.EntityBase;

namespace <#= _prefix #>.Module.<#= _model.Project.Code #>.Domain.<#= _class.Name #>
{
    /// <summary>
    /// <#= _class.Remarks #>
    /// </summary>
    [Table("<#= _class.TableName #>")]
    public partial class <#= _class.Name #>Entity : <#= _baseEntityName #>
    {
<#  foreach(var p in _propertyList){ if(p.IsInherit) continue;#>
        /// <summary>
        /// <#= p.Remarks #>
        /// </summary>
        public <#= p.Type == PropertyType.Enum ? p.Enum.Name : p.Type.ToDescription() #> <#= p.Name #> { get; set; }<#= GetDefaultValue(p) #>

<# } #>
    }
}
